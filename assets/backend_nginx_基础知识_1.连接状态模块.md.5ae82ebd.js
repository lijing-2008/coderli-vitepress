import{_ as s,c as a,o as n,a as e}from"./app.67efe51d.js";const u=JSON.parse('{"title":"查询模块是否安装","description":"","frontmatter":{"author":"coder-li","tags":"nginx连接状态模块 nginx/modules/stub_status_module","aliases":"连接状态"},"headers":[{"level":2,"title":"连接","slug":"连接","link":"#连接","children":[]},{"level":2,"title":"请求","slug":"请求","link":"#请求","children":[]},{"level":2,"title":"keepalive设置","slug":"keepalive设置","link":"#keepalive设置","children":[]}],"relativePath":"backend/nginx/基础知识/1.连接状态模块.md"}'),l={name:"backend/nginx/基础知识/1.连接状态模块.md"},p=e(`<p>nginx有一个模块页面，统计当前有多人用户访问连接</p><h1 id="查询模块是否安装" tabindex="-1">查询模块是否安装 <a class="header-anchor" href="#查询模块是否安装" aria-hidden="true">#</a></h1><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">nginx -v </span><span style="color:#89DDFF;">2&gt;&amp;1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> grep stub_status</span></span>
<span class="line"></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/lijing-2008/PicGo/img/20220112125752.png" alt=""></p><h1 id="配置状态模块" tabindex="-1">配置状态模块 <a class="header-anchor" href="#配置状态模块" aria-hidden="true">#</a></h1><p>配置在server块中</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># lj.conf</span></span>
<span class="line"><span style="color:#A6ACCD;">server:{</span></span>
<span class="line"><span style="color:#A6ACCD;">	location /nginx_status </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		stub_status</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		allow all</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div><h1 id="访问连接状态模块" tabindex="-1">访问连接状态模块 <a class="header-anchor" href="#访问连接状态模块" aria-hidden="true">#</a></h1><p><code>/nginx_status</code><img src="https://cdn.jsdelivr.net/gh/lijing-2008/PicGo/img/20220112130212.png" alt=""></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">Active connections: 2  </span><span style="color:#676E95;">#活跃的连接数 </span></span>
<span class="line"><span style="color:#A6ACCD;">server accepts handled requests </span><span style="color:#676E95;">#服务器接收处理请求</span></span>
<span class="line"><span style="color:#A6ACCD;"> 7 7 23 </span></span>
<span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;">#①总连接数-②成功连接数-③请求数(如果一个请求文件中还包含多个请求文件可能一次请求会连带多个请求数)</span></span>
<span class="line"><span style="color:#A6ACCD;">Reading: 0 Writing: 1 Waiting: 1</span></span>
<span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;">#Reading读取客户端Header的信息数 请求头</span></span>
<span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;">#Writing返回给客户端的header的信息数 响应头</span></span>
<span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;">#Waiting等待的请求数，开启了Keepalive</span></span>
<span class="line"></span></code></pre></div><p>关于连接 [[网络]] [[tcp三次握手]] [[Tcp四次挥手]]</p><blockquote><p>简单讲 ===连接对应于tcp，请求对应于http===</p></blockquote><h2 id="连接" tabindex="-1">连接 <a class="header-anchor" href="#连接" aria-hidden="true">#</a></h2><p>指的是[[tcp三次握手]]，</p><h2 id="请求" tabindex="-1">请求 <a class="header-anchor" href="#请求" aria-hidden="true">#</a></h2><p>指的是[[http请求]]</p><h2 id="keepalive设置" tabindex="-1">keepalive设置 <a class="header-anchor" href="#keepalive设置" aria-hidden="true">#</a></h2><p>===长连接设置=== 设置server块中的keepalive_timeout值 ![[nginx主配置文件#③ HTTP模块]] <code>keepalive</code>指的是访问一个服务器之后，将会保持一定时间的连接，如果超过了这个时间没有进行任何请求操作，那么将会断开连接，下次访问将重新进行[[tcp三次握手]]建立连接。如上默认为65s 例如，将keepalive_timeout设为3，则每过3s，如果没任何操作则需要重新建立连接</p>`,18),t=[p];function c(o,i,r,d,h,_){return n(),a("div",null,t)}const y=s(l,[["render",c]]);export{u as __pageData,y as default};
