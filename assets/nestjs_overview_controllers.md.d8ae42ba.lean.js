import{_ as o,c as r,o as s,a as e,b as t}from"./app.e4bf8fc7.js";const B=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"nestjs/overview/controllers.md"}'),n={name:"nestjs/overview/controllers.md"},l=e("p",null,[t("Controllers are responsible for handling incoming requests and returning responses to the client. 控制器是用来做路由导航的，控制着你的请求路径去往何方，比如"),e("a",{href:"http://xxx.com/user%EF%BC%8C%E5%8C%B9%E9%85%8D%E7%9A%84%E8%B7%AF%E5%BE%84%E6%98%AF/user%E3%80%82",target:"_blank",rel:"noreferrer"},"http://xxx.com/user，匹配的路径是/user。"),e("img",{src:"https://img1.imgtp.com/2022/12/13/BmgSnfot.png",alt:"1670939591315.png"}),t(" ● 通过@Controller(...path...)来构造一个控制器")],-1),a=e("p",null,"● 在Module的中的@Module装饰器内放入控制器，@Module({controllers:[xxxController]})只有这样，Nest的Ioc容器才会产生出该控制器的实例，才能为你的application所用",-1),c=e("p",null,"● 常用的方法装饰器有@Get()、@Post()、@Patch()、@Delete()、等等",-1),i=e("p",null,"● 常用的方法参数装饰器有@Body()、@Query()、@Param()、@Request()/@Req()、@Response()/@Res()",-1),p=e("p",null,"● @HttpCode()、@Header()、@Redirect()等这几个可能用的比较少，反正我目前基本不用",-1),d=[l,a,c,i,p];function _(u,h,m,x,f,g){return s(),r("div",null,d)}const C=o(n,[["render",_]]);export{B as __pageData,C as default};
