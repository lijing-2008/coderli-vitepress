import{_ as s,c as a,o as n,d as e}from"./app.86a3c011.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"push","slug":"push","link":"#push","children":[]},{"level":2,"title":"多库提交","slug":"多库提交","link":"#多库提交","children":[]}],"relativePath":"backend/gitLearn/远程仓库/3.push.md"}'),l={name:"backend/gitLearn/远程仓库/3.push.md"},p=e(`<h2 id="push" tabindex="-1">push <a class="header-anchor" href="#push" aria-hidden="true">#</a></h2><p><code>git push</code>命令用于将本地分支的更新，推送到远程主机。它的格式与<code>git pull</code>命令相似。</p><ol><li>将当前分支推送到<code>origin</code>主机的对应分支(如果当前分支只有一个追踪分支 ，可省略主机名)</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">git push origin</span></span>
<span class="line"></span></code></pre></div><ol start="2"><li>使用<code>-u</code>选项指定一个默认主机 ,这样以后就可以不加任何参数直接使用<code>git push</code>。</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">git push -u origin master</span></span>
<span class="line"></span></code></pre></div><ol start="3"><li><p>删除远程<code>ask</code>分支 <code>git push origin --delete ask</code></p></li><li><p>本地 ask 分支关联远程分支并推送 <code>git push --set-upstream origin ask</code></p></li></ol><h2 id="多库提交" tabindex="-1">多库提交 <a class="header-anchor" href="#多库提交" aria-hidden="true">#</a></h2><p>我可以将代码提交到多个远程版本库中，比如后盾人的 <a href="https://gitee.com/houdunren/code" target="_blank" rel="noreferrer">课程代码 (opens new window)</a>就提交到了 Github 与 Gitee 两个库中。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 第一个库</span></span>
<span class="line"><span style="color:#A6ACCD;">git remote add origin git@xxxx/xxxx.git</span></span>
<span class="line"><span style="color:#A6ACCD;">git push -u origin main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 增加一个远程库</span></span>
<span class="line"><span style="color:#A6ACCD;">git remote add github git@github.com:houdunwang/coding.git</span></span>
<span class="line"><span style="color:#676E95;"># 提交到远程库</span></span>
<span class="line"><span style="color:#A6ACCD;">git push github</span></span>
<span class="line"></span></code></pre></div><p>也可以在<code>~/.zshrc</code> 文件中定义别名，下面是定义的别名。这时使用 gp 将同时提供到 github 与 gitee</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#82AAFF;">alias</span><span style="color:#A6ACCD;"> gp=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">git push &amp; git push github</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>还有一种方式可以同时对origin建立两个远程仓库关联</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">git remote add origin 你的Github仓库地址</span></span>
<span class="line"><span style="color:#A6ACCD;">git remote set-url --add origin 你的码云地址</span></span>
<span class="line"></span></code></pre></div><p>如果要要出某一个远程仓库</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">git remote set-url --delete origin 要删除的仓库地址</span></span>
<span class="line"></span></code></pre></div>`,16),o=[p];function t(i,c,r,d,h,g){return n(),a("div",null,o)}const C=s(l,[["render",t]]);export{b as __pageData,C as default};
