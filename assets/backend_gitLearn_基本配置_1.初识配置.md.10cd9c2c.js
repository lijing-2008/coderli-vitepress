import{_ as e,c as a,o as s,d as c}from"./app.86a3c011.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、设置用户签名","slug":"一、设置用户签名","link":"#一、设置用户签名","children":[{"level":3,"title":"1. 用户级全局配置","slug":"_1-用户级全局配置","link":"#_1-用户级全局配置","children":[]},{"level":3,"title":"2. 局部配置","slug":"_2-局部配置","link":"#_2-局部配置","children":[]},{"level":3,"title":"3. 修改配置","slug":"_3-修改配置","link":"#_3-修改配置","children":[]}]},{"level":2,"title":"二、查看配置信息","slug":"二、查看配置信息","link":"#二、查看配置信息","children":[]},{"level":2,"title":"三、配置文件位置","slug":"三、配置文件位置","link":"#三、配置文件位置","children":[]}],"relativePath":"backend/gitLearn/基本配置/1.初识配置.md"}'),i={name:"backend/gitLearn/基本配置/1.初识配置.md"},o=c(`<blockquote><p>Git的配置可以修改配置文件，可以使用命令行直接修改</p></blockquote><p>配置文件的位置因各计算机平台的不同而不同，</p><h2 id="一、设置用户签名" tabindex="-1">一、设置用户签名 <a class="header-anchor" href="#一、设置用户签名" aria-hidden="true">#</a></h2><p>包括设置用户名和邮箱两个内容</p><h3 id="_1-用户级全局配置" tabindex="-1">1. 用户级全局配置 <a class="header-anchor" href="#_1-用户级全局配置" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">git config --global user.name 用户名</span></span>
<span class="line"><span style="color:#A6ACCD;">git config --global user.email 邮箱</span></span>
<span class="line"></span></code></pre></div><p>签名用来做身份标识，<code>Git</code>首次安装时必须设置用户签名，否则无法提交代码。这里的签名和以后<code>github、gitee</code>的账号没有任何关系。</p><p>上述命令执行完毕后，会在家目录下生成<code>.gitconfig</code>文件，<code>Mac</code>的家目录就是<code>/Users/用户名/</code>目录，<code>Windows</code>的家目录就是<code>C:\\Users\\用户名默认为Administrator\\</code>目录。</p><h3 id="_2-局部配置" tabindex="-1">2. 局部配置 <a class="header-anchor" href="#_2-局部配置" aria-hidden="true">#</a></h3><p>所谓局部设置，就是在指定的仓库有效，局部配置命令去除<code>--golobal</code>选项即可，局部配置信息会放到仓库的<code>仓库名/.git/config</code>文件下，对一个仓库来说，局部变量会覆盖全局变量</p><h3 id="_3-修改配置" tabindex="-1">3. 修改配置 <a class="header-anchor" href="#_3-修改配置" aria-hidden="true">#</a></h3><p>如果是全局修改，修改<code>~/.gitconfig</code>文件，如果是局部修改，修改仓库目录下的<code>.git/config</code>文件</p><h2 id="二、查看配置信息" tabindex="-1">二、查看配置信息 <a class="header-anchor" href="#二、查看配置信息" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">git config --list</span></span>
<span class="line"><span style="color:#A6ACCD;">git config -l</span></span>
<span class="line"></span></code></pre></div><h2 id="三、配置文件位置" tabindex="-1">三、配置文件位置 <a class="header-anchor" href="#三、配置文件位置" aria-hidden="true">#</a></h2><ul><li><p><code>/etc/gitconfig</code> 文件：包含了适用于系统所有用户和所有仓库的值。如果你传递参数选项<code>--system</code>给<code> git config</code>，它将明确的读和写这个文件。</p></li><li><p><code>~/.gitconfig</code>文件：具体到个人用户，此账户下所有的<code>Git</code>仓库都使用这个配置文件。可以通过传递<code>--global</code>选项使<code> Git</code> 读或写这个特定的文件。</p></li><li><p><code>.git/config</code>文件：位于<code>git</code>目录的<code>config</code>文件，特定指向该单一的库，仅对当前仓库有效。</p></li></ul><blockquote><p>这里还给出一种查看配置文件位置的方法</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">git config --list --show-origin</span></span>
<span class="line"></span></code></pre></div><p>它会列出所有的配置文件内容和位置</p><img src="https://cdn.jsdelivr.net/gh/lijing-2008/PicGo/img/image-20221214202538164.png" alt="image-20221214202538164" style="zoom:50%;"></blockquote>`,17),n=[o];function l(t,d,p,r,g,h){return s(),a("div",null,n)}const b=e(i,[["render",l]]);export{u as __pageData,b as default};
