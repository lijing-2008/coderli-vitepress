import{_ as s,c as a,o as n,d as l}from"./app.86a3c011.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、配置文件设置","slug":"一、配置文件设置","link":"#一、配置文件设置","children":[]},{"level":2,"title":"二、系统配置定义","slug":"二、系统配置定义","link":"#二、系统配置定义","children":[]}],"relativePath":"backend/gitLearn/基本配置/2.配置别名.md"}'),o={name:"backend/gitLearn/基本配置/2.配置别名.md"},p=l(`<p>在使用<code>Git</code>时，如果不想每次都输入全部的命令，可以给常用的命令配置一个别名</p><h2 id="一、配置文件设置" tabindex="-1">一、配置文件设置 <a class="header-anchor" href="#一、配置文件设置" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># ~/.gitconfig</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">alias</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">	a = add </span><span style="color:#82AAFF;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">	c = commit</span></span>
<span class="line"><span style="color:#A6ACCD;">	s = status</span></span>
<span class="line"><span style="color:#A6ACCD;">	l = log</span></span>
<span class="line"><span style="color:#A6ACCD;">	b = branch</span></span>
<span class="line"></span></code></pre></div><p>此时使用<code>git a</code>和<code>git add .</code>效果一样</p><h2 id="二、系统配置定义" tabindex="-1">二、系统配置定义 <a class="header-anchor" href="#二、系统配置定义" aria-hidden="true">#</a></h2><p>使用系统终端配置定义更精简，可以通过修改<code>~/.zshrc</code>文件设置别名</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#82AAFF;">alias</span><span style="color:#A6ACCD;"> gs=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">git status</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">alias</span><span style="color:#A6ACCD;"> gc=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">git commit -m </span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">alias</span><span style="color:#A6ACCD;"> gl=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">git log --graph --pretty=format:&#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#39; --abbrev-commit</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">alias</span><span style="color:#A6ACCD;"> gb=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">git branch</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">alias</span><span style="color:#A6ACCD;"> ga=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">git add -A</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">alias</span><span style="color:#A6ACCD;"> go=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">git checkout</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">alias</span><span style="color:#A6ACCD;"> gp=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">git push;git push github</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>此时在命令行使用<code>gs</code>和<code>git status</code>一样效果</p>`,8),e=[p];function t(c,r,i,d,D,y){return n(),a("div",null,e)}const C=s(o,[["render",t]]);export{A as __pageData,C as default};
